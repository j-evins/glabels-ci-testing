# This workflow tests building gLabels on multiple platforms
#
#     - ubuntu-latest  - gcc
#     - ubuntu-latest  - clang
#     - ubuntu-20.04   - gcc   (For backwards compatablity)
#     - windows-latest - cl
      

name: gLabels-qt Multi-Platform Build Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

###############################################################################
#
# Windows-latest, cl
#
###############################################################################
  windows-latest-build:

    runs-on: windows-latest

    steps:
    - name: checkout
      uses: actions/checkout@v4

    - name: Install Qt (Windows)
      uses: jurplel/install-qt-action@v4
      with:
        version: '5.15.*'
        archives: 'qtbase qtsvg qttools'

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_C_COMPILER=cl
        -DCMAKE_BUILD_TYPE=Release
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config Release

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      #run: xvfb-run ctest --build-config Release
      run: ctest --build-config Release
